<templateSet group="BenWhitehead Slf4j">
  <template name="LOG" value="private static final org.slf4j.Logger $LOGGER_NAME$ = org.slf4j.LoggerFactory.getLogger($LOGGER_CATEGORY$.class);" description="Create an Slf4j Logger" toReformat="false" toShortenFQNames="true">
    <variable name="LOGGER_NAME" expression="suggestVariableName()" defaultValue="LOG" alwaysStopAt="true" />
    <variable name="LOGGER_CATEGORY" expression="className()" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_DECLARATION" value="true" />
    </context>
  </template>
  <template name="logi" value="$LOGGER$.info(&quot;$END$&quot;);" description="Slf4j log at info level" toReformat="false" toShortenFQNames="true">
    <variable name="LOGGER" expression="variableOfType(&quot;org.slf4j.Logger&quot;)" defaultValue="&quot;LOGGER&quot;" alwaysStopAt="false" />
    <context>
      <option name="JAVA_STATEMENT" value="true" />
    </context>
  </template>
  <template name="logiv" value="$LOGGER$.info(&quot;$EXPR_COPY$ = {}&quot;, $EXPR$);" description="Slf4j log value at info level" toReformat="false" toShortenFQNames="true">
    <variable name="LOGGER" expression="variableOfType(&quot;org.slf4j.Logger&quot;)" defaultValue="&quot;LOGGER&quot;" alwaysStopAt="false" />
    <variable name="EXPR" expression="variableOfType(&quot;&quot;)" defaultValue="&quot;expr&quot;" alwaysStopAt="true" />
    <variable name="EXPR_COPY" expression="EXPR" defaultValue="" alwaysStopAt="false" />
    <context>
      <option name="JAVA_STATEMENT" value="true" />
    </context>
  </template>
  <template name="logd" value="$LOGGER$.debug(&quot;$END$&quot;);" description="Slf4j log at debug level" toReformat="false" toShortenFQNames="true">
    <variable name="LOGGER" expression="variableOfType(&quot;org.slf4j.Logger&quot;)" defaultValue="&quot;LOGGER&quot;" alwaysStopAt="false" />
    <context>
      <option name="JAVA_STATEMENT" value="true" />
    </context>
  </template>
  <template name="logdv" value="$LOGGER$.debug(&quot;$EXPR_COPY$ = {}&quot;, $EXPR$);" description="Slf4j log value at debug level" toReformat="false" toShortenFQNames="true">
    <variable name="LOGGER" expression="variableOfType(&quot;org.slf4j.Logger&quot;)" defaultValue="&quot;LOGGER&quot;" alwaysStopAt="false" />
    <variable name="EXPR" expression="variableOfType(&quot;&quot;)" defaultValue="&quot;expr&quot;" alwaysStopAt="true" />
    <variable name="EXPR_COPY" expression="EXPR" defaultValue="" alwaysStopAt="false" />
    <context>
      <option name="JAVA_STATEMENT" value="true" />
    </context>
  </template>
  <template name="logt" value="$LOGGER$.trace(&quot;$END$&quot;);" description="Slf4j log at trace level" toReformat="false" toShortenFQNames="true">
    <variable name="LOGGER" expression="variableOfType(&quot;org.slf4j.Logger&quot;)" defaultValue="&quot;LOGGER&quot;" alwaysStopAt="false" />
    <context>
      <option name="JAVA_STATEMENT" value="true" />
    </context>
  </template>
  <template name="logtv" value="$LOGGER$.trace(&quot;$EXPR_COPY$ = {}&quot;, $EXPR$);" description="Slf4j log value at trace level" toReformat="false" toShortenFQNames="true">
    <variable name="LOGGER" expression="variableOfType(&quot;org.slf4j.Logger&quot;)" defaultValue="&quot;LOGGER&quot;" alwaysStopAt="false" />
    <variable name="EXPR" expression="variableOfType(&quot;&quot;)" defaultValue="&quot;expr&quot;" alwaysStopAt="true" />
    <variable name="EXPR_COPY" expression="EXPR" defaultValue="" alwaysStopAt="false" />
    <context>
      <option name="JAVA_STATEMENT" value="true" />
    </context>
  </template>
  <template name="logw" value="$LOGGER$.warn(&quot;$END$&quot;);" description="Slf4j log at warn level" toReformat="false" toShortenFQNames="true">
    <variable name="LOGGER" expression="variableOfType(&quot;org.slf4j.Logger&quot;)" defaultValue="&quot;LOGGER&quot;" alwaysStopAt="false" />
    <context>
      <option name="JAVA_STATEMENT" value="true" />
    </context>
  </template>
  <template name="logwv" value="$LOGGER$.warn(&quot;$EXPR_COPY$ = {}&quot;, $EXPR$);" description="Slf4j log value at warn level" toReformat="false" toShortenFQNames="true">
    <variable name="LOGGER" expression="variableOfType(&quot;org.slf4j.Logger&quot;)" defaultValue="&quot;LOGGER&quot;" alwaysStopAt="false" />
    <variable name="EXPR" expression="variableOfType(&quot;&quot;)" defaultValue="&quot;expr&quot;" alwaysStopAt="true" />
    <variable name="EXPR_COPY" expression="EXPR" defaultValue="" alwaysStopAt="false" />
    <context>
      <option name="JAVA_STATEMENT" value="true" />
    </context>
  </template>
  <template name="loge" value="$LOGGER$.error(&quot;$END$&quot;);" description="Slf4j log at error level" toReformat="false" toShortenFQNames="true">
    <variable name="LOGGER" expression="variableOfType(&quot;org.slf4j.Logger&quot;)" defaultValue="&quot;LOGGER&quot;" alwaysStopAt="false" />
    <context>
      <option name="JAVA_STATEMENT" value="true" />
    </context>
  </template>
  <template name="logev" value="$LOGGER$.error(&quot;$EXPR_COPY$ = {}&quot;, $EXPR$);" description="Slf4j log value at error level" toReformat="false" toShortenFQNames="true">
    <variable name="LOGGER" expression="variableOfType(&quot;org.slf4j.Logger&quot;)" defaultValue="&quot;LOGGER&quot;" alwaysStopAt="false" />
    <variable name="EXPR" expression="variableOfType(&quot;&quot;)" defaultValue="&quot;expr&quot;" alwaysStopAt="true" />
    <variable name="EXPR_COPY" expression="EXPR" defaultValue="" alwaysStopAt="false" />
    <context>
      <option name="JAVA_STATEMENT" value="true" />
    </context>
  </template>
  <template name="logdm" value="$LOGGER$.debug(&quot;&gt;&gt;&gt; $METHOD_NAME$($PARAMETERS$)&quot;$POSSIBLE_COMMA$$PARAMETER_VALUES$);" description="Slf4j log method name and parameters at debug level" toReformat="true" toShortenFQNames="true">
    <variable name="LOGGER" expression="variableOfType(&quot;org.slf4j.Logger&quot;)" defaultValue="&quot;LOGGER&quot;" alwaysStopAt="false" />
    <variable name="METHOD_NAME" expression="methodName()" defaultValue="" alwaysStopAt="false" />
    <variable name="PARAMETERS" expression="groovyScript(&quot;_1.collect {it + ' : {}'}.join(', ')&quot;, methodParameters())" defaultValue="" alwaysStopAt="false" />
    <variable name="POSSIBLE_COMMA" expression="" defaultValue="&quot;,&quot;" alwaysStopAt="true" />
    <variable name="PARAMETER_VALUES" expression="groovyScript(&quot;_1.collect {it}.join(', ')&quot;, methodParameters())" defaultValue="" alwaysStopAt="false" />
    <context>
      <option name="JAVA_STATEMENT" value="true" />
    </context>
  </template>
  <template name="logdmx" value="$LOGGER$.debug(&quot;&lt;&lt;&lt; $METHOD_NAME$($PARAMETERS$)&quot;$POSSIBLE_COMMA$$PARAMETER_VALUES$);" description="Slf4j log method name and parameters at debug level" toReformat="true" toShortenFQNames="true">
    <variable name="LOGGER" expression="variableOfType(&quot;org.slf4j.Logger&quot;)" defaultValue="&quot;LOGGER&quot;" alwaysStopAt="false" />
    <variable name="METHOD_NAME" expression="methodName()" defaultValue="" alwaysStopAt="false" />
    <variable name="PARAMETERS" expression="groovyScript(&quot;_1.collect {it + ' : {}'}.join(', ')&quot;, methodParameters())" defaultValue="" alwaysStopAt="false" />
    <variable name="POSSIBLE_COMMA" expression="" defaultValue="&quot;,&quot;" alwaysStopAt="true" />
    <variable name="PARAMETER_VALUES" expression="groovyScript(&quot;_1.collect {it}.join(', ')&quot;, methodParameters())" defaultValue="" alwaysStopAt="false" />
    <context>
      <option name="JAVA_STATEMENT" value="true" />
    </context>
  </template>
  <template name="logtm" value="$LOGGER$.trace($TRACE_ENTER$, &quot;$METHOD_NAME$($PARAMETERS$)&quot;$POSSIBLE_COMMA$$PARAMETER_VALUES$);" description="Slf4j log entry of method w/ name and parameters at trace level" toReformat="true" toShortenFQNames="true">
    <variable name="LOGGER" expression="variableOfType(&quot;org.slf4j.Logger&quot;)" defaultValue="&quot;LOGGER&quot;" alwaysStopAt="false" />
    <variable name="TRACE_ENTER" expression="variableOfType(&quot;org.slf4j.Marker&quot;)" defaultValue="&quot;TRACE_ENTER&quot;" alwaysStopAt="false" />
    <variable name="METHOD_NAME" expression="methodName()" defaultValue="" alwaysStopAt="false" />
    <variable name="PARAMETERS" expression="groovyScript(&quot;_1.collect {it + ' : {}'}.join(', ')&quot;, methodParameters())" defaultValue="" alwaysStopAt="false" />
    <variable name="POSSIBLE_COMMA" expression="" defaultValue="&quot;,&quot;" alwaysStopAt="true" />
    <variable name="PARAMETER_VALUES" expression="groovyScript(&quot;_1.collect {it}.join(', ')&quot;, methodParameters())" defaultValue="" alwaysStopAt="false" />
    <context>
      <option name="JAVA_STATEMENT" value="true" />
    </context>
  </template>
  <template name="logtmx" value="$LOGGER$.trace($TRACE_EXIT$, &quot;$METHOD_NAME$($PARAMETERS$)&quot;$POSSIBLE_COMMA$$PARAMETER_VALUES$);" description="Slf4j log exit of method w/ name and parameters at trace level" toReformat="true" toShortenFQNames="true">
    <variable name="LOGGER" expression="variableOfType(&quot;org.slf4j.Logger&quot;)" defaultValue="&quot;LOGGER&quot;" alwaysStopAt="false" />
    <variable name="TRACE_EXIT" expression="&quot;TRACE_EXIT&quot;" defaultValue="&quot;TRACE_EXIT&quot;" alwaysStopAt="false" />
    <variable name="METHOD_NAME" expression="methodName()" defaultValue="" alwaysStopAt="false" />
    <variable name="PARAMETERS" expression="groovyScript(&quot;_1.collect {it + ' : {}'}.join(', ')&quot;, methodParameters())" defaultValue="" alwaysStopAt="false" />
    <variable name="POSSIBLE_COMMA" expression="" defaultValue="&quot;,&quot;" alwaysStopAt="true" />
    <variable name="PARAMETER_VALUES" expression="groovyScript(&quot;_1.collect {it}.join(', ')&quot;, methodParameters())" defaultValue="" alwaysStopAt="false" />
    <context>
      <option name="JAVA_STATEMENT" value="true" />
    </context>
  </template>
  <template name="MTE" value="private static final org.slf4j.Marker $MARKER_NAME$ = org.slf4j.MarkerFactory.getMarker(&quot;$MARKER_CATEGORY$&quot;);" description="Create a trace enter marker" toReformat="false" toShortenFQNames="true">
    <variable name="MARKER_NAME" expression="&quot;TRACE_ENTER&quot;" defaultValue="" alwaysStopAt="true" />
    <variable name="MARKER_CATEGORY" expression="&quot;enter&quot;" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_DECLARATION" value="true" />
    </context>
  </template>
  <template name="MTEX" value="private static final org.slf4j.Marker $MARKER_NAME$ = org.slf4j.MarkerFactory.getMarker(&quot;$MARKER_CATEGORY$&quot;);" description="Create a trace exit marker" toReformat="false" toShortenFQNames="true">
    <variable name="MARKER_NAME" expression="&quot;TRACE_EXIT&quot;" defaultValue="" alwaysStopAt="true" />
    <variable name="MARKER_CATEGORY" expression="&quot;exit&quot;" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="JAVA_DECLARATION" value="true" />
    </context>
  </template>
</templateSet>